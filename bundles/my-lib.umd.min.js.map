{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://my-lib/lib/ngx-editor/common/utils/ngx-editor.utils.ts","ng://my-lib/lib/ngx-editor/common/services/command-executor.service.ts","ng://my-lib/lib/ngx-editor/common/services/message.service.ts","ng://my-lib/lib/ngx-editor/common/ngx-editor.defaults.ts","ng://my-lib/lib/ngx-editor/ngx-editor.component.ts","ng://my-lib/lib/ngx-editor/ngx-grippie/ngx-grippie.component.ts","ng://my-lib/lib/ngx-editor/ngx-editor-message/ngx-editor-message.component.ts","ng://my-lib/lib/ngx-editor/ngx-editor-toolbar/ngx-editor-toolbar.component.ts","ng://my-lib/lib/ngx-editor/ngx-editor.module.ts"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","canEnableToolbarOptions","value","toolbar","filter","array","indexOf","saveSelection","window","getSelection","sel","getRangeAt","rangeCount","document","createRange","restoreSelection","range","removeAllRanges","addRange","select","ngxEditorConfig","input","undefined","hasOwnProperty","resizer","CommandExecutorService","_http","this","savedSelection","prototype","execute","command","Error","execCommand","insertImage","imageURI","Utils.restoreSelection","insertVideo","videParams","isYoutubeLink","videoUrl","youtubeURL","width","height","insertHtml","checkTagSupportInBrowser","isValidURL","videoSrc","url","test","uploadImage","file","endPoint","formData","FormData","append","req","HttpRequest","reportProgress","request","createLink","params","urlNewTab","newUrl","urlLink","urlText","type","insertColor","color","where","checkSelection","setFontSize","fontSize","deletedValue","deleteAndGetElement","isNumeric","fontPx","setFontName","fontName","fontFamily","html","slectedText","toString","deleteContents","tag","createElement","HTMLUnknownElement","HttpClient","Injectable","MessageService","message","Subject","getMessage","asObservable","sendMessage","next","clearMessageIn","milliseconds","_this","setTimeout","editable","spellcheck","minHeight","minWidth","translate","enableToolbar","showToolbar","placeholder","imageEndPoint","NgxEditorComponent","_messageService","_commandExecutor","_renderer","config","blur","EventEmitter","focus","Utils","onTextAreaFocus","emit","onEditorFocus","textArea","getElementById","nativeElement","onContentChange","innerHTML","onChange","togglePlaceholder","onTextAreaBlur","Utils.saveSelection","onTouched","resizeTextArea","offsetY","newHeight","parseInt","style","executeCommand","commandName","error","writeValue","refreshView","registerOnChange","fn","registerOnTouched","normalizedValue","setProperty","console","log","ngxWrapper","removeClass","addClass","getCollectiveParams","ngOnInit","getEditorConfiguration","offsetHeight","Renderer2","Input","Output","ViewChild","static","NgxEditorComponent_1","Component","selector","template","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","NgxGrippieComponent","_editorComponent","oldY","grabber","onMouseMove","event","clientY","onMouseUp","onResize","preventDefault","HostListener","NgxEditorMessageComponent","ngxMessage","subscribe","clearMessage","NgxEditorToolbarComponent","_popOverConfig","_formBuilder","_commandExecutorService","uploadComplete","updloadPercentage","isUploading","selectedColorTab","hexColor","isImageUploader","outsideClick","placement","container","Utils.canEnableToolbarOptions","triggerCommand","buildUrlForm","urlForm","group","Validators","required","insertLink","urlPopover","hide","buildImageForm","imageForm","imageUrl","buildVideoForm","videoForm","onFileChange","e","files","Math","round","loaded","total","HttpResponse","body","imagePopover","videoPopover","colorPopover","fontSizePopover","PopoverConfig","FormBuilder","NgxEditorModule","NgModule","imports","CommonModule","FormsModule","ReactiveFormsModule","PopoverModule","forRoot","HttpClientModule","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\r\n * enable or disable toolbar based on configuration\r\n *\r\n * @param value toolbar item\r\n * @param toolbar toolbar configuration object\r\n */\r\nexport function canEnableToolbarOptions(value: string, toolbar: any): boolean {\r\n  if (value) {\r\n    if (toolbar['length'] === 0) {\r\n      return true;\r\n    } else {\r\n      const found = toolbar.filter(array => {\r\n        return array.indexOf(value) !== -1;\r\n      });\r\n\r\n      return found.length ? true : false;\r\n    }\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * set editor configuration\r\n *\r\n * @param value configuration via [config] property\r\n * @param ngxEditorConfig default editor configuration\r\n * @param input direct configuration inputs via directives\r\n */\r\nexport function getEditorConfiguration(value: any, ngxEditorConfig: any, input: any): any {\r\n  for (const i in ngxEditorConfig) {\r\n    if (i) {\r\n      if (input[i] !== undefined) {\r\n        value[i] = input[i];\r\n      }\r\n      if (!value.hasOwnProperty(i)) {\r\n        value[i] = ngxEditorConfig[i];\r\n      }\r\n    }\r\n  }\r\n\r\n  return value;\r\n}\r\n\r\n/**\r\n * return vertical if the element is the resizer property is set to basic\r\n *\r\n * @param resizer type of resizer, either basic or stack\r\n */\r\nexport function canResize(resizer: string): any {\r\n  if (resizer === 'basic') {\r\n    return 'vertical';\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * save selection when the editor is focussed out\r\n */\r\nexport function saveSelection(): any {\r\n  if (window.getSelection) {\r\n    const sel = window.getSelection();\r\n    if (sel.getRangeAt && sel.rangeCount) {\r\n      return sel.getRangeAt(0);\r\n    }\r\n  } else if (document.getSelection && document.createRange) {\r\n    return document.createRange();\r\n  }\r\n  return null;\r\n}\r\n\r\n/**\r\n * restore selection when the editor is focussed in\r\n *\r\n * @param range saved selection when the editor is focussed out\r\n */\r\nexport function restoreSelection(range): boolean {\r\n  if (range) {\r\n    if (window.getSelection) {\r\n      const sel = window.getSelection();\r\n      sel.removeAllRanges();\r\n      sel.addRange(range);\r\n      return true;\r\n    } else if (document.getSelection && range.select) {\r\n      range.select();\r\n      return true;\r\n    }\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpRequest } from '@angular/common/http';\r\nimport * as Utils from '../utils/ngx-editor.utils';\r\n\r\n@Injectable()\r\nexport class CommandExecutorService {\r\n  /** saves the selection from the editor when focussed out */\r\n  savedSelection: any = undefined;\r\n\r\n  /**\r\n   *\r\n   * @param _http HTTP Client for making http requests\r\n   */\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  /**\r\n   * executes command from the toolbar\r\n   *\r\n   * @param command command to be executed\r\n   */\r\n  execute(command: string): void {\r\n    if (!this.savedSelection && command !== 'enableObjectResizing') {\r\n      throw new Error('Range out of Editor');\r\n    }\r\n\r\n    if (command === 'enableObjectResizing') {\r\n      document.execCommand('enableObjectResizing', true);\r\n    }\r\n\r\n    if (command === 'blockquote') {\r\n      document.execCommand('formatBlock', false, 'blockquote');\r\n    }\r\n\r\n    if (command === 'removeBlockquote') {\r\n      document.execCommand('formatBlock', false, 'div');\r\n    }\r\n\r\n    document.execCommand(command, false, null);\r\n  }\r\n\r\n  /**\r\n   * inserts image in the editor\r\n   *\r\n   * @param imageURI url of the image to be inserted\r\n   */\r\n  insertImage(imageURI: string): void {\r\n    if (this.savedSelection) {\r\n      if (imageURI) {\r\n        const restored = Utils.restoreSelection(this.savedSelection);\r\n        if (restored) {\r\n          const inserted = document.execCommand('insertImage', false, imageURI);\r\n          if (!inserted) {\r\n            throw new Error('Invalid URL');\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      throw new Error('Range out of the editor');\r\n    }\r\n  }\r\n\r\n  /**\r\n * inserts image in the editor\r\n *\r\n * @param videParams url of the image to be inserted\r\n */\r\n  insertVideo(videParams: any): void {\r\n    if (this.savedSelection) {\r\n      if (videParams) {\r\n        const restored = Utils.restoreSelection(this.savedSelection);\r\n        if (restored) {\r\n          if (this.isYoutubeLink(videParams.videoUrl)) {\r\n            const youtubeURL = '<iframe width=\"' + videParams.width + '\" height=\"' + videParams.height + '\"'\r\n              + 'src=\"' + videParams.videoUrl + '\"></iframe>';\r\n            this.insertHtml(youtubeURL);\r\n          } else if (this.checkTagSupportInBrowser('video')) {\r\n\r\n            if (this.isValidURL(videParams.videoUrl)) {\r\n              const videoSrc = '<video width=\"' + videParams.width + '\" height=\"' + videParams.height + '\"'\r\n                + ' controls=\"true\"><source src=\"' + videParams.videoUrl + '\"></video>';\r\n              this.insertHtml(videoSrc);\r\n            } else {\r\n              throw new Error('Invalid video URL');\r\n            }\r\n\r\n          } else {\r\n            throw new Error('Unable to insert video');\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      throw new Error('Range out of the editor');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * checks the input url is a valid youtube URL or not\r\n   *\r\n   * @param url Youtue URL\r\n   */\r\n  private isYoutubeLink(url: string): boolean {\r\n    const ytRegExp = /^(http(s)?:\\/\\/)?((w){3}.)?youtu(be|.be)?(\\.com)?\\/.+/;\r\n    return ytRegExp.test(url);\r\n  }\r\n\r\n  /**\r\n   * check whether the string is a valid url or not\r\n   * @param url url\r\n   */\r\n  private isValidURL(url: string) {\r\n    const urlRegExp = /(http|https):\\/\\/(\\w+:{0,1}\\w*)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%!\\-\\/]))?/;\r\n    return urlRegExp.test(url);\r\n  }\r\n\r\n  /**\r\n   * uploads image to the server\r\n   *\r\n   * @param file file that has to be uploaded\r\n   * @param endPoint enpoint to which the image has to be uploaded\r\n   */\r\n  uploadImage(file: File, endPoint: string): any {\r\n    if (!endPoint) {\r\n      throw new Error('Image Endpoint isn`t provided or invalid');\r\n    }\r\n\r\n    const formData: FormData = new FormData();\r\n\r\n    if (file) {\r\n\r\n      formData.append('file', file);\r\n\r\n      const req = new HttpRequest('POST', endPoint, formData, {\r\n        reportProgress: true\r\n      });\r\n\r\n      return this._http.request(req);\r\n\r\n    } else {\r\n      throw new Error('Invalid Image');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * inserts link in the editor\r\n   *\r\n   * @param params parameters that holds the information for the link\r\n   */\r\n  createLink(params: any): void {\r\n    if (this.savedSelection) {\r\n      /**\r\n       * check whether the saved selection contains a range or plain selection\r\n       */\r\n      if (params.urlNewTab) {\r\n        const newUrl = '<a href=\"' + params.urlLink + '\" target=\"_blank\">' + params.urlText + '</a>';\r\n\r\n        if (document.getSelection().type !== 'Range') {\r\n          const restored = Utils.restoreSelection(this.savedSelection);\r\n          if (restored) {\r\n            this.insertHtml(newUrl);\r\n          }\r\n        } else {\r\n          throw new Error('Only new links can be inserted. You cannot edit URL`s');\r\n        }\r\n      } else {\r\n        const restored = Utils.restoreSelection(this.savedSelection);\r\n        if (restored) {\r\n          document.execCommand('createLink', false, params.urlLink);\r\n        }\r\n      }\r\n    } else {\r\n      throw new Error('Range out of the editor');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * insert color either font or background\r\n   *\r\n   * @param color color to be inserted\r\n   * @param where where the color has to be inserted either text/background\r\n   */\r\n  insertColor(color: string, where: string): void {\r\n    if (this.savedSelection) {\r\n      const restored = Utils.restoreSelection(this.savedSelection);\r\n      if (restored && this.checkSelection()) {\r\n        if (where === 'textColor') {\r\n          document.execCommand('foreColor', false, color);\r\n        } else {\r\n          document.execCommand('hiliteColor', false, color);\r\n        }\r\n      }\r\n    } else {\r\n      throw new Error('Range out of the editor');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * set font size for text\r\n   *\r\n   * @param fontSize font-size to be set\r\n   */\r\n  setFontSize(fontSize: string): void {\r\n    if (this.savedSelection && this.checkSelection()) {\r\n      const deletedValue = this.deleteAndGetElement();\r\n\r\n      if (deletedValue) {\r\n        const restored = Utils.restoreSelection(this.savedSelection);\r\n\r\n        if (restored) {\r\n          if (this.isNumeric(fontSize)) {\r\n            const fontPx = '<span style=\"font-size: ' + fontSize + 'px;\">' + deletedValue + '</span>';\r\n            this.insertHtml(fontPx);\r\n          } else {\r\n            const fontPx = '<span style=\"font-size: ' + fontSize + ';\">' + deletedValue + '</span>';\r\n            this.insertHtml(fontPx);\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      throw new Error('Range out of the editor');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * set font name/family for text\r\n   *\r\n   * @param fontName font-family to be set\r\n   */\r\n  setFontName(fontName: string): void {\r\n    if (this.savedSelection && this.checkSelection()) {\r\n      const deletedValue = this.deleteAndGetElement();\r\n\r\n      if (deletedValue) {\r\n        const restored = Utils.restoreSelection(this.savedSelection);\r\n\r\n        if (restored) {\r\n          if (this.isNumeric(fontName)) {\r\n            const fontFamily = '<span style=\"font-family: ' + fontName + 'px;\">' + deletedValue + '</span>';\r\n            this.insertHtml(fontFamily);\r\n          } else {\r\n            const fontFamily = '<span style=\"font-family: ' + fontName + ';\">' + deletedValue + '</span>';\r\n            this.insertHtml(fontFamily);\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      throw new Error('Range out of the editor');\r\n    }\r\n  }\r\n\r\n  /** insert HTML */\r\n  private insertHtml(html: string): void {\r\n    const isHTMLInserted = document.execCommand('insertHTML', false, html);\r\n\r\n    if (!isHTMLInserted) {\r\n      throw new Error('Unable to perform the operation');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * check whether the value is a number or string\r\n   * if number return true\r\n   * else return false\r\n   */\r\n  private isNumeric(value: any): boolean {\r\n    return /^-{0,1}\\d+$/.test(value);\r\n  }\r\n\r\n  /** delete the text at selected range and return the value */\r\n  private deleteAndGetElement(): any {\r\n    let slectedText;\r\n\r\n    if (this.savedSelection) {\r\n      slectedText = this.savedSelection.toString();\r\n      this.savedSelection.deleteContents();\r\n      return slectedText;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /** check any slection is made or not */\r\n  private checkSelection(): any {\r\n    const slectedText = this.savedSelection.toString();\r\n\r\n    if (slectedText.length === 0) {\r\n      throw new Error('No Selection Made');\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * check tag is supported by browser or not\r\n   *\r\n   * @param tag HTML tag\r\n   */\r\n  private checkTagSupportInBrowser(tag: string): boolean {\r\n    return !(document.createElement(tag) instanceof HTMLUnknownElement);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject, Observable } from 'rxjs';\r\n\r\n\r\n/** time in which the message has to be cleared */\r\nconst DURATION = 7000;\r\n\r\n@Injectable()\r\nexport class MessageService {\r\n  /** variable to hold the user message */\r\n  private message: Subject<string> = new Subject();\r\n\r\n  constructor() { }\r\n\r\n  /** returns the message sent by the editor */\r\n  getMessage(): Observable<string> {\r\n    return this.message.asObservable();\r\n  }\r\n\r\n  /**\r\n   * sends message to the editor\r\n   *\r\n   * @param message message to be sent\r\n   */\r\n  sendMessage(message: string): void {\r\n    this.message.next(message);\r\n    this.clearMessageIn(DURATION);\r\n  }\r\n\r\n  /**\r\n   * a short interval to clear message\r\n   *\r\n   * @param milliseconds time in seconds in which the message has to be cleared\r\n   */\r\n  private clearMessageIn(milliseconds: number): void {\r\n    setTimeout(() => {\r\n      this.message.next(undefined);\r\n    }, milliseconds);\r\n  }\r\n}\r\n","/**\r\n * toolbar default configuration\r\n */\r\nexport const ngxEditorConfig = {\r\n  editable: true,\r\n  spellcheck: true,\r\n  height: 'auto',\r\n  minHeight: '0',\r\n  width: 'auto',\r\n  minWidth: '0',\r\n  translate: 'yes',\r\n  enableToolbar: true,\r\n  showToolbar: true,\r\n  placeholder: 'Enter text here...',\r\n  imageEndPoint: '',\r\n  toolbar: [\r\n    ['bold', 'italic', 'underline', 'strikeThrough', 'superscript', 'subscript'],\r\n    ['fontName', 'fontSize', 'color'],\r\n    ['justifyLeft', 'justifyCenter', 'justifyRight', 'justifyFull', 'indent', 'outdent'],\r\n    ['cut', 'copy', 'delete', 'removeFormat', 'undo', 'redo'],\r\n    ['paragraph', 'blockquote', 'removeBlockquote', 'horizontalLine', 'orderedList', 'unorderedList'],\r\n    ['link', 'unlink', 'image', 'video']\r\n  ]\r\n};\r\n","import {\r\n  Component, OnInit, Input, Output, ViewChild, ElementRef,\r\n  EventEmitter, Renderer2, forwardRef\r\n} from '@angular/core';\r\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\r\n\r\nimport {CommandExecutorService} from './common/services/command-executor.service';\r\nimport {MessageService} from './common/services/message.service';\r\n\r\nimport {ngxEditorConfig} from './common/ngx-editor.defaults';\r\nimport * as Utils from './common/utils/ngx-editor.utils';\r\n\r\n@Component({\r\n  selector: 'app-ngx-editor',\r\n  templateUrl: './ngx-editor.component.html',\r\n  styleUrls: ['./ngx-editor.component.scss'],\r\n  providers: [{\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => NgxEditorComponent),\r\n    multi: true\r\n  }]\r\n})\r\n\r\nexport class NgxEditorComponent implements OnInit, ControlValueAccessor {\r\n  @Input() editable: boolean;\r\n  @Input() spellcheck: boolean;\r\n  @Input() placeholder: string;\r\n  @Input() translate: string;\r\n  @Input() height: string;\r\n  @Input() minHeight: string;\r\n  @Input() width: string;\r\n  @Input() minWidth: string;\r\n  @Input() toolbar: Object;\r\n  @Input() resizer = 'stack';\r\n  @Input() config = ngxEditorConfig;\r\n  @Input() showToolbar: boolean;\r\n  @Input() enableToolbar: boolean;\r\n  @Input() imageEndPoint: string;\r\n\r\n  @Output() blur: EventEmitter<string> = new EventEmitter<string>();\r\n  @Output() focus: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  @ViewChild('textArea', {static: false}) textArea: any;\r\n  @ViewChild('ngxWrapper', {static: false}) ngxWrapper: ElementRef;\r\n\r\n  Utils: any = Utils;\r\n\r\n  private onChange: (value: string) => void;\r\n  private onTouched: () => void;\r\n\r\n  constructor(private _messageService: MessageService, private _commandExecutor: CommandExecutorService, private _renderer: Renderer2) {\r\n  }\r\n\r\n  onTextAreaFocus(): void {\r\n    this.focus.emit('focus');\r\n  }\r\n\r\n  onEditorFocus() {\r\n    let textArea: any = document.getElementById('textArea');\r\n    ((this.textArea || {}).nativeElement || textArea).focus();\r\n  }\r\n\r\n  onContentChange(innerHTML: string): void {\r\n    if (typeof this.onChange === 'function') {\r\n      this.onChange(innerHTML);\r\n      this.togglePlaceholder(innerHTML);\r\n    }\r\n  }\r\n\r\n  onTextAreaBlur(): void {\r\n    /** save selection if focussed out */\r\n    this._commandExecutor.savedSelection = Utils.saveSelection();\r\n\r\n    if (typeof this.onTouched === 'function') {\r\n      this.onTouched();\r\n    }\r\n    this.blur.emit('blur');\r\n  }\r\n\r\n  resizeTextArea(offsetY: number): void {\r\n    let newHeight = parseInt(this.height, 10);\r\n    newHeight += offsetY;\r\n    this.height = newHeight + 'px';\r\n    let textArea: any = document.getElementById('textArea');\r\n    ((this.textArea || {}).nativeElement || textArea).style.height = this.height;\r\n  }\r\n\r\n  executeCommand(commandName: string): void {\r\n    try {\r\n      this._commandExecutor.execute(commandName);\r\n    } catch (error) {\r\n      this._messageService.sendMessage(error.message);\r\n    }\r\n  }\r\n\r\n  writeValue(value: any): void {\r\n    this.togglePlaceholder(value);\r\n\r\n    if (value === null || value === undefined || value === '' || value === '<br>') {\r\n      value = null;\r\n    }\r\n\r\n    this.refreshView(value);\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  refreshView(value: string): void {\r\n    let textArea: any = document.getElementById('textArea');\r\n    const normalizedValue = value === null ? '' : value;\r\n    this._renderer.setProperty((this.textArea || {}).nativeElement || textArea, 'innerHTML', normalizedValue);\r\n  }\r\n\r\n  togglePlaceholder(value: any): void {\r\n    console.log(this.ngxWrapper);\r\n    let ngxWrapper: any = document.getElementById('ngxWrapper');\r\n    if (!value || value === '<br>' || value === '') {\r\n      this._renderer.addClass((this.ngxWrapper || {}).nativeElement || ngxWrapper, 'show-placeholder');\r\n    } else {\r\n      this._renderer.removeClass((this.ngxWrapper || {}).nativeElement || ngxWrapper, 'show-placeholder');\r\n    }\r\n  }\r\n\r\n  getCollectiveParams(): any {\r\n    return {\r\n      editable: this.editable,\r\n      spellcheck: this.spellcheck,\r\n      placeholder: this.placeholder,\r\n      translate: this.translate,\r\n      height: this.height,\r\n      minHeight: this.minHeight,\r\n      width: this.width,\r\n      minWidth: this.minWidth,\r\n      enableToolbar: this.enableToolbar,\r\n      showToolbar: this.showToolbar,\r\n      imageEndPoint: this.imageEndPoint,\r\n      toolbar: this.toolbar\r\n    };\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.config = this.Utils.getEditorConfiguration(this.config, ngxEditorConfig, this.getCollectiveParams());\r\n    let textArea: any = document.getElementById('textArea');\r\n    this.height = this.height || ((this.textArea || {}).nativeElement || textArea).offsetHeight;\r\n\r\n    this.executeCommand('enableObjectResizing');\r\n  }\r\n}\r\n","import { Component, HostListener } from '@angular/core';\r\nimport { NgxEditorComponent } from '../ngx-editor.component';\r\n\r\n@Component({\r\n  selector: 'app-ngx-grippie',\r\n  templateUrl: './ngx-grippie.component.html',\r\n  styleUrls: ['./ngx-grippie.component.scss']\r\n})\r\n\r\nexport class NgxGrippieComponent {\r\n  /** height of the editor */\r\n  height: number;\r\n  /** previous value befor resizing the editor */\r\n  oldY = 0;\r\n  /** set to true on mousedown event */\r\n  grabber = false;\r\n\r\n  /**\r\n   * Constructor\r\n   *\r\n   * @param _editorComponent Editor component\r\n   */\r\n  constructor(private _editorComponent: NgxEditorComponent) { }\r\n\r\n  /**\r\n   *\r\n   * @param event Mouseevent\r\n   *\r\n   * Update the height of the editor when the grabber is dragged\r\n   */\r\n  @HostListener('document:mousemove', ['$event']) onMouseMove(event: MouseEvent) {\r\n    if (!this.grabber) {\r\n      return;\r\n    }\r\n\r\n    this._editorComponent.resizeTextArea(event.clientY - this.oldY);\r\n    this.oldY = event.clientY;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param event Mouseevent\r\n   *\r\n   * set the grabber to false on mouse up action\r\n   */\r\n  @HostListener('document:mouseup', ['$event']) onMouseUp(event: MouseEvent) {\r\n    this.grabber = false;\r\n  }\r\n\r\n  @HostListener('mousedown', ['$event']) onResize(event: MouseEvent, resizer?: Function) {\r\n    this.grabber = true;\r\n    this.oldY = event.clientY;\r\n    event.preventDefault();\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\nimport { MessageService } from '../common/services/message.service';\r\n\r\n@Component({\r\n  selector: 'app-ngx-editor-message',\r\n  templateUrl: './ngx-editor-message.component.html',\r\n  styleUrls: ['./ngx-editor-message.component.scss']\r\n})\r\n\r\nexport class NgxEditorMessageComponent {\r\n  /** property that holds the message to be displayed on the editor */\r\n  ngxMessage = undefined;\r\n\r\n  /**\r\n   * @param _messageService service to send message to the editor\r\n   */\r\n  constructor(private _messageService: MessageService) {\r\n    this._messageService.getMessage().subscribe((message: string) => this.ngxMessage = message);\r\n  }\r\n\r\n  /**\r\n   * clears editor message\r\n   */\r\n  clearMessage(): void {\r\n    this.ngxMessage = undefined;\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { PopoverConfig } from 'ngx-bootstrap';\r\nimport { CommandExecutorService } from '../common/services/command-executor.service';\r\nimport { MessageService } from '../common/services/message.service';\r\nimport * as Utils from '../common/utils/ngx-editor.utils';\r\n\r\n@Component({\r\n  selector: 'app-ngx-editor-toolbar',\r\n  templateUrl: './ngx-editor-toolbar.component.html',\r\n  styleUrls: ['./ngx-editor-toolbar.component.scss'],\r\n  providers: [PopoverConfig]\r\n})\r\n\r\nexport class NgxEditorToolbarComponent implements OnInit {\r\n  /** holds values of the insert link form */\r\n  urlForm: FormGroup;\r\n  /** holds values of the insert image form */\r\n  imageForm: FormGroup;\r\n  /** holds values of the insert video form */\r\n  videoForm: FormGroup;\r\n  /** set to false when image is being uploaded */\r\n  uploadComplete = true;\r\n  /** upload percentage */\r\n  updloadPercentage = 0;\r\n  /** set to true when the image is being uploaded */\r\n  isUploading = false;\r\n  /** which tab to active for color insetion */\r\n  selectedColorTab = 'textColor';\r\n  /** font family name */\r\n  fontName = '';\r\n  /** font size */\r\n  fontSize = '';\r\n  /** hex color code */\r\n  hexColor = '';\r\n  /** show/hide image uploader */\r\n  isImageUploader = false;\r\n\r\n  /**\r\n   * Editor configuration\r\n   */\r\n  @Input() config: any;\r\n  @ViewChild('urlPopover', {static: false}) urlPopover;\r\n  @ViewChild('imagePopover', {static: false}) imagePopover;\r\n  @ViewChild('videoPopover', {static: false}) videoPopover;\r\n  @ViewChild('fontSizePopover', {static: false}) fontSizePopover;\r\n  @ViewChild('colorPopover', {static: false}) colorPopover;\r\n  /**\r\n   * Emits an event when a toolbar button is clicked\r\n   */\r\n  @Output() execute: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  constructor(private _popOverConfig: PopoverConfig,\r\n    private _formBuilder: FormBuilder,\r\n    private _messageService: MessageService,\r\n    private _commandExecutorService: CommandExecutorService) {\r\n    this._popOverConfig.outsideClick = true;\r\n    this._popOverConfig.placement = 'bottom';\r\n    this._popOverConfig.container = 'body';\r\n  }\r\n\r\n  /**\r\n   * enable or diable toolbar based on configuration\r\n   *\r\n   * @param value name of the toolbar buttons\r\n   */\r\n  canEnableToolbarOptions(value): boolean {\r\n    return Utils.canEnableToolbarOptions(value, this.config['toolbar']);\r\n  }\r\n\r\n  /**\r\n   * triggers command from the toolbar to be executed and emits an event\r\n   *\r\n   * @param command name of the command to be executed\r\n   */\r\n  triggerCommand(command: string): void {\r\n    this.execute.emit(command);\r\n  }\r\n\r\n  /**\r\n   * create URL insert form\r\n   */\r\n  buildUrlForm(): void {\r\n    this.urlForm = this._formBuilder.group({\r\n      urlLink: ['', [Validators.required]],\r\n      urlText: ['', [Validators.required]],\r\n      urlNewTab: [true]\r\n    });\r\n  }\r\n\r\n  /**\r\n   * inserts link in the editor\r\n   */\r\n  insertLink(): void {\r\n    try {\r\n      this._commandExecutorService.createLink(this.urlForm.value);\r\n    } catch (error) {\r\n      this._messageService.sendMessage(error.message);\r\n    }\r\n\r\n    /** reset form to default */\r\n    this.buildUrlForm();\r\n    /** close inset URL pop up */\r\n    this.urlPopover.hide();\r\n  }\r\n\r\n  /**\r\n   * create insert image form\r\n   */\r\n  buildImageForm(): void {\r\n    this.imageForm = this._formBuilder.group({\r\n      imageUrl: ['', [Validators.required]]\r\n    });\r\n  }\r\n\r\n  /**\r\n   * create insert image form\r\n   */\r\n  buildVideoForm(): void {\r\n    this.videoForm = this._formBuilder.group({\r\n      videoUrl: ['', [Validators.required]],\r\n      height: [''],\r\n      width: ['']\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Executed when file is selected\r\n   *\r\n   * @param e onChange event\r\n   */\r\n  onFileChange(e): void {\r\n    this.uploadComplete = false;\r\n    this.isUploading = true;\r\n\r\n    if (e.target.files.length > 0) {\r\n      const file = e.target.files[0];\r\n\r\n      try {\r\n        this._commandExecutorService.uploadImage(file, this.config.imageEndPoint).subscribe(event => {\r\n\r\n          if (event.type) {\r\n            this.updloadPercentage = Math.round(100 * event.loaded / event.total);\r\n          }\r\n\r\n          if (event instanceof HttpResponse) {\r\n            try {\r\n              this._commandExecutorService.insertImage(event.body.url);\r\n            } catch (error) {\r\n              this._messageService.sendMessage(error.message);\r\n            }\r\n            this.uploadComplete = true;\r\n            this.isUploading = false;\r\n          }\r\n        });\r\n      } catch (error) {\r\n        this._messageService.sendMessage(error.message);\r\n        this.uploadComplete = true;\r\n        this.isUploading = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  /** insert image in the editor */\r\n  insertImage(): void {\r\n    try {\r\n      this._commandExecutorService.insertImage(this.imageForm.value.imageUrl);\r\n    } catch (error) {\r\n      this._messageService.sendMessage(error.message);\r\n    }\r\n\r\n    /** reset form to default */\r\n    this.buildImageForm();\r\n    /** close inset URL pop up */\r\n    this.imagePopover.hide();\r\n  }\r\n\r\n  /** insert image in the editor */\r\n  insertVideo(): void {\r\n    try {\r\n      this._commandExecutorService.insertVideo(this.videoForm.value);\r\n    } catch (error) {\r\n      this._messageService.sendMessage(error.message);\r\n    }\r\n\r\n    /** reset form to default */\r\n    this.buildVideoForm();\r\n    /** close inset URL pop up */\r\n    this.videoPopover.hide();\r\n  }\r\n\r\n  /** inser text/background color */\r\n  insertColor(color: string, where: string): void {\r\n    try {\r\n      this._commandExecutorService.insertColor(color, where);\r\n    } catch (error) {\r\n      this._messageService.sendMessage(error.message);\r\n    }\r\n\r\n    this.colorPopover.hide();\r\n  }\r\n\r\n  /** set font size */\r\n  setFontSize(fontSize: string): void {\r\n    try {\r\n      this._commandExecutorService.setFontSize(fontSize);\r\n    } catch (error) {\r\n      this._messageService.sendMessage(error.message);\r\n    }\r\n\r\n    this.fontSizePopover.hide();\r\n  }\r\n\r\n  /** set font Name/family */\r\n  setFontName(fontName: string): void {\r\n    try {\r\n      this._commandExecutorService.setFontName(fontName);\r\n    } catch (error) {\r\n      this._messageService.sendMessage(error.message);\r\n    }\r\n\r\n    this.fontSizePopover.hide();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.buildUrlForm();\r\n    this.buildImageForm();\r\n    this.buildVideoForm();\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {ReactiveFormsModule} from '@angular/forms';\r\nimport {PopoverModule} from 'ngx-bootstrap';\r\nimport {NgxEditorComponent} from './ngx-editor.component';\r\nimport {NgxGrippieComponent} from './ngx-grippie/ngx-grippie.component';\r\nimport {NgxEditorMessageComponent} from './ngx-editor-message/ngx-editor-message.component';\r\nimport {NgxEditorToolbarComponent} from './ngx-editor-toolbar/ngx-editor-toolbar.component';\r\nimport {MessageService} from './common/services/message.service';\r\nimport {CommandExecutorService} from './common/services/command-executor.service';\r\n\r\n\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, PopoverModule.forRoot(), HttpClientModule],\r\n  declarations: [NgxEditorComponent, NgxGrippieComponent, NgxEditorMessageComponent, NgxEditorToolbarComponent],\r\n  exports: [NgxEditorComponent],\r\n  providers: [CommandExecutorService, MessageService]\r\n})\r\n\r\nexport class NgxEditorModule {\r\n}\r\n"]}